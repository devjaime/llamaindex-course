"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "getPipelineCreate", {
    enumerable: true,
    get: function() {
        return getPipelineCreate;
    }
});
const _nodeparser = require("@llamaindex/core/node-parser");
const _OpenAIEmbedding = require("../embeddings/OpenAIEmbedding.js");
function getTransformationConfig(transformation) {
    if (transformation instanceof _nodeparser.SentenceSplitter) {
        return {
            configurable_transformation_type: "SENTENCE_AWARE_NODE_PARSER",
            component: {
                chunk_size: transformation.chunkSize,
                chunk_overlap: transformation.chunkOverlap,
                include_metadata: transformation.includeMetadata,
                include_prev_next_rel: transformation.includePrevNextRel
            }
        };
    }
    if (transformation instanceof _OpenAIEmbedding.OpenAIEmbedding) {
        return {
            configurable_transformation_type: "OPENAI_EMBEDDING",
            component: {
                model: transformation.model,
                api_key: transformation.apiKey,
                embed_batch_size: transformation.embedBatchSize,
                dimensions: transformation.dimensions
            }
        };
    }
    throw new Error(`Unsupported transformation: ${typeof transformation}`);
}
async function getPipelineCreate(params) {
    const { pipelineName, pipelineType, transformations = [] } = params;
    return {
        name: pipelineName,
        configured_transformations: transformations.map(getTransformationConfig),
        pipeline_type: pipelineType
    };
}
