import type { ImageType } from "../Node.js";
import { MultiModalEmbedding } from "./MultiModalEmbedding.js";
export type JinaEmbeddingRequest = {
    input: Array<{
        text: string;
    } | {
        url: string;
    } | {
        bytes: string;
    }>;
    model?: string;
    encoding_type?: "float" | "binary" | "ubinary";
};
export type JinaEmbeddingResponse = {
    model: string;
    object: string;
    usage: {
        total_tokens: number;
        prompt_tokens: number;
    };
    data: Array<{
        object: string;
        index: number;
        embedding: number[];
    }>;
};
export declare class JinaAIEmbedding extends MultiModalEmbedding {
    apiKey: string;
    model: string;
    baseURL: string;
    getTextEmbedding(text: string): Promise<number[]>;
    getImageEmbedding(image: ImageType): Promise<number[]>;
    getTextEmbeddings: (texts: string[]) => Promise<Array<number[]>>;
    getImageEmbeddings(images: ImageType[]): Promise<number[][]>;
    constructor(init?: Partial<JinaAIEmbedding>);
    private getImageInput;
    private getJinaEmbedding;
}
