import type { JSONValue } from "@llamaindex/core/global";
import type { ImageType } from "@llamaindex/core/schema";
export declare const isAsyncIterable: (obj: unknown) => obj is AsyncIterable<unknown>;
export declare const isIterable: (obj: unknown) => obj is Iterable<unknown>;
/**
 * Prettify an error for AI to read
 */
export declare function prettifyError(error: unknown): string;
export declare function stringifyJSONToMessageContent(value: JSONValue): string;
/**
 * Get the top K embeddings from a list of embeddings ordered by similarity to the query.
 * @param queryEmbedding
 * @param embeddings list of embeddings to consider
 * @param similarityTopK max number of embeddings to return, default 2
 * @param embeddingIds ids of embeddings in the embeddings list
 * @param similarityCutoff minimum similarity score
 * @returns
 */
export declare function getTopKEmbeddings(queryEmbedding: number[], embeddings: number[][], similarityTopK?: number, embeddingIds?: any[] | null, similarityCutoff?: number | null): [number[], any[]];
export declare function getTopKMMREmbeddings(queryEmbedding: number[], embeddings: number[][], similarityFn?: ((...args: any[]) => number) | null, similarityTopK?: number | null, embeddingIds?: any[] | null, _similarityCutoff?: number | null, mmrThreshold?: number | null): [number[], any[]];
export declare function imageToString(input: ImageType): Promise<string>;
export declare function stringToImage(input: string): ImageType;
export declare function imageToDataUrl(input: ImageType): Promise<string>;
