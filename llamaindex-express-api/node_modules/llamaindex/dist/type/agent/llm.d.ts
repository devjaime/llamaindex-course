import type { BaseToolWithCall, LLM } from "@llamaindex/core/llms";
import { ObjectRetriever } from "../objects/index.js";
import { AgentRunner, AgentWorker, type AgentParamsBase } from "./base.js";
type LLMParamsBase = AgentParamsBase<LLM>;
type LLMParamsWithTools = LLMParamsBase & {
    tools: BaseToolWithCall[];
};
type LLMParamsWithToolRetriever = LLMParamsBase & {
    toolRetriever: ObjectRetriever<BaseToolWithCall>;
};
export type LLMAgentParams = LLMParamsWithTools | LLMParamsWithToolRetriever;
export declare class LLMAgentWorker extends AgentWorker<LLM> {
    taskHandler: import("./types.js").TaskHandler<LLM<object, object>>;
}
export declare class LLMAgent extends AgentRunner<LLM> {
    constructor(params: LLMAgentParams);
    createStore: typeof AgentRunner.defaultCreateStore;
    taskHandler: import("./types.js").TaskHandler<LLM<object, object>>;
}
export {};
