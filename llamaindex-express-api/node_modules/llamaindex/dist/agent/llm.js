import { Settings } from "../Settings.js";
import { AgentRunner, AgentWorker } from "./base.js";
import { validateAgentParams } from "./utils.js";
export class LLMAgentWorker extends AgentWorker {
    taskHandler = AgentRunner.defaultTaskHandler;
}
export class LLMAgent extends AgentRunner {
    constructor(params){
        validateAgentParams(params);
        const llm = params.llm ?? (Settings.llm ? Settings.llm : null);
        if (!llm) throw new Error("llm must be provided for either in params or Settings.llm");
        super({
            llm,
            chatHistory: params.chatHistory ?? [],
            systemPrompt: params.systemPrompt ?? null,
            runner: new LLMAgentWorker(),
            tools: "tools" in params ? params.tools : params.toolRetriever.retrieve.bind(params.toolRetriever),
            verbose: params.verbose ?? false
        });
    }
    createStore = AgentRunner.defaultCreateStore;
    taskHandler = AgentRunner.defaultTaskHandler;
}
