import { type MetadataFilters, type RetrievalParams } from "@llamaindex/cloud/api";
import type { NodeWithScore } from "@llamaindex/core/schema";
import type { BaseRetriever, RetrieveParams } from "../Retriever.js";
import type { ClientParams, CloudConstructorParams } from "./constants.js";
export type CloudRetrieveParams = Omit<RetrievalParams, "query" | "search_filters" | "dense_similarity_top_k"> & {
    similarityTopK?: number;
    filters?: MetadataFilters;
};
export declare class LlamaCloudRetriever implements BaseRetriever {
    clientParams: ClientParams;
    retrieveParams: CloudRetrieveParams;
    projectName: string;
    pipelineName: string;
    private resultNodesToNodeWithScore;
    constructor(params: CloudConstructorParams & CloudRetrieveParams);
    retrieve({ query, preFilters, }: RetrieveParams): Promise<NodeWithScore[]>;
}
